@model THFixit.Models.ModelView.TicketView
@{
    ViewData["Title"] = string.IsNullOrEmpty(Model.DocNo) ? "Create Ticket" : "Edit Ticket";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var branchId = Context.Request.Cookies["BranchId"].ToString();
}
@if (!string.IsNullOrEmpty(Model.DocNo))
{
    <script>
    localStorage.setItem('branchId','@Model.BuildingId')
    </script>
}
<section class="content-header">
    @if (Model.Ret.Ok && !string.IsNullOrEmpty(Model.Ret.Message))
    {
        <div id="top-alert">
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                @Model.Ret.Message
            </div>
            <script>
                $('#top-alert').fadeOut(1000);
            </script>
        </div>
    }
    else if (!Model.Ret.Ok && !string.IsNullOrEmpty(Model.Ret.Message))
    {
        <div id="top-alert">
            <div class="alert  alert-danger alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                @Model.Ret.Message
            </div>
        </div>
    }
    <h1 id="title-content">
        <i style="width: 15px; height: 25px;border-radius:50%;margin-top:-5px;" class="btn btn-warning btn-small btn-circle"> </i>   Ticket @(string.IsNullOrEmpty(Model.DocNo) ? "" : "#" + Model.Id)
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"> Home</a></li>
        <li><a href="/Ticket/List">  Tickets</a></li>
        @if (string.IsNullOrEmpty(Model.DocNo))
        {
          <li class="active">Create</li>
        }
        else
        {
          <li class="active">Edit</li>
        }
    </ol>
</section>
<section class="content">
    <form enctype="multipart/form-data" id="ticket-form" method="post">
        <input asp-for="BranchId" type="hidden" value="@branchId" />
        <input asp-for="No" type="hidden" />
        <input asp-for="DocNo" type="hidden" />
        <input asp-for="Id" type="hidden" />
        <div class="row">
            <div class="col-md-8">
                <div id="box-req" style="padding:10px;" class="panel panel-default">
                    <div class="box-header">
                        @(string.IsNullOrEmpty(Model.DocNo) ? "" : "#" + Model.DocNo)
                        <div class="box-tools">
                            <div class="btn-group" @(string.IsNullOrEmpty(Model.DocNo) ? "style=display:none;" : "")>                                 
                                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                    Action
                                    <span class="caret"></span>
                                    <span class="sr-only">Toggle Dropdown</span>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-right" role="menu">
                                    <li><a href="#">Estimate</a></li>
                                    <li class="divider"></li>
                                    <li><a href="#">Appointment</a></li>
                                    <li class="divider"></li>
                                    <li><a href="#">Assignment </a></li>
                                    <li><a href="#">Print Ticket</a></li>
                                    <li class="divider"></li>
                                    <li><a href="#">Action Time </a></li>
                                    <li class="divider"></li>
                                    <li><a href="#">Change prioritys</a></li>
                                    <li><a href="#">Change status</a></li>
                                    <li class="divider"></li>
                                    <li><a href="#">Expenses</a></li>
                                    <li class="divider"></li>
                                    <li><a href="#">Assessment</a></li>
                                </ul>
                            </div>                            
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="row form-group-ex">
                            <div class="col-md-12">
                                <label for="req-name">Ticket Subject <span class="text-danger">*</span> </label>
                                <input asp-for="Title" required class="form-control" autocomplete="off" placeholder="Ticket Subject" />
                            </div>
                        </div>
                        <div class="row form-group-ex">
                            <div class="col-md-12">
                                <label for="req-name">Ticket Description <span class="text-danger">*</span></label>
                                <textarea style="min-height:310px;" asp-for="Description" required class="form-control" autocomplete="off" placeholder="Ticket Description"></textarea>
                            </div>
                        </div>
                        <div class="row form-group-ex">
                            <div class="col-md-12">
                                <label for="req-name">Serial Number/Register Number/Machine Number</label>
                                <select asp-for="SerialId" class="form-control" required autocomplete="off">
                                    @Html.Raw((string.IsNullOrEmpty(Model.DocNo) ? "<option value='0'>Serial Number/Register Number/Machine Number</option>" : "<option value='" + Model.SerialId + "'>[" + Model.SerialNumber +"] " + Model.EquipmentName + "</option>"))
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div id="box-req" style="padding:10px;" class="panel panel-default">
                    <div class="box-header" id="DocNoView">
                        @(string.IsNullOrEmpty(Model.DocNo) ? "" : "#" + Model.DocDate)
                    </div>
                    <div class="box-body">
                        <div class="row form-group-ex">
                            <div class="col-md-12">
                                <label for="req-name">
                                    Requestor/Director/Receiver <span class="text-danger">*</span>
                                </label>
                                <select asp-for="RequestorId" class="form-control" required autocomplete="off">
                                    @Html.Raw((string.IsNullOrEmpty(Model.DocNo) ? "<option value='0'>Requestor</option>" : "<option value='" + Model.RequestorId + "'>" + Model.RequestorName + "</option>"))
                                </select>
                            </div>
                        </div>
                        <hr />
                        Department/Location
                        <hr />
                        <div class="row form-group-ex">
                            <div class="col-md-6">
                                <label for="req-name">
                                    Department<span class="text-danger">*</span>
                                </label>
                                <select asp-for="DepartId" class="form-control" required autocomplete="off">
                                    <option value="0">Department</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="req-name">
                                    Building<span class="text-danger">*</span>
                                </label>
                                <select asp-for="BuildingId" class="form-control" required autocomplete="off">
                                    <option value="0">Building</option>
                                </select>
                            </div>
                        </div>
                        <div class="row form-group-ex">
                            <div class="col-md-6">
                                <label for="req-name">
                                    Class<span class="text-danger">*</span>
                                </label>
                                <select asp-for="ClassId" class="form-control" required autocomplete="off">
                                    <option value="0">Class</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="req-name">
                                    Room <span class="text-danger">*</span>
                                </label>
                                <select asp-for="RoomId" class="form-control" required autocomplete="off">
                                    <option value="0">Room</option>
                                </select>
                            </div>
                        </div>
                        <div class="row form-group-ex">
                            <div class="col-md-6">
                                <label class="control-label">Priority <span class="text-danger">*</span></label>
                                <select asp-for="PriorityId" asp-items="Model.Prioritys" class="form-control"
                                        required autocomplete="off"></select>
                            </div>
                            <div class="col-md-6">
                                <label class="control-label">Status <span class="text-danger">*</span></label>
                                <select asp-for="StatusId" disabled asp-items="Model.Status" class="form-control" required autocomplete="off"></select>
                            </div>
                        </div>
                        <div class="row form-group-ex">
                            <div class="col-md-12">
                                <label class="control-label">Contact </label>
                                <input asp-for="Contact" class="form-control" autocomplete="off" placeholder="Contact" />
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer text-right">
                        <div class="btn-group dropup">
                            <a href="/Ticket/List" class="btn btn-default ">Cancel</a>
                            <button class="btn btn-success" onclick="Save()" type="button">Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" @(string.IsNullOrEmpty(Model.DocNo) ? "style=display:none;" : "")>
            <div class="col-md-8">
                <div id="box-req" style="padding:10px;" class="panel panel-default">
                    <div class="box-header">
                        <div class="box-tools" style="margin:5px;">
                            <div class="btn-group">
                                <button type="button" class="btn btn-default">Refresh</button>
                            </div>
                        </div>
                    </div>
                    <div class="box-body">
                        <ul class="timeline timeline-inverse">
                            <!-- timeline time label -->
                            <li class="time-label">
                                <span class="bg-yellow">
                                    10 Feb. 2014
                                </span>
                            </li>
                            <!-- /.timeline-label -->
                            <!-- timeline item -->
                            <li>
                                <i class="fa fa-envelope bg-blue"></i>

                                <div class="timeline-item">
                                    <span class="time"><i class="fa fa-clock-o"></i> 12:05</span>

                                    <h3 class="timeline-header"><a href="#">Support Team</a> sent you an email</h3>

                                    <div class="timeline-body">
                                        Etsy doostang zoodles disqus groupon greplin oooj voxy zoodles,
                                        weebly ning heekya handango imeem plugg dopplr jibjab, movity
                                        jajah plickers sifteo edmodo ifttt zimbra. Babblely odeo kaboodle
                                        quora plaxo ideeli hulu weebly balihoo...
                                    </div>
                                    <div class="timeline-footer">
                                        <a class="btn btn-primary btn-xs">Read more</a>
                                        <a class="btn btn-danger btn-xs">Delete</a>
                                    </div>
                                </div>
                            </li>
                            <!-- END timeline item -->
                            <!-- timeline item -->
                            <li>
                                <i class="fa fa-user bg-aqua"></i>

                                <div class="timeline-item">
                                    <span class="time"><i class="fa fa-clock-o"></i> 5 mins ago</span>

                                    <h3 class="timeline-header no-border">
                                        <a href="#">Sarah Young</a> accepted your friend request
                                    </h3>
                                </div>
                            </li>
                            <!-- END timeline item -->
                            <!-- timeline item -->
                            <li>
                                <i class="fa fa-comments bg-yellow"></i>

                                <div class="timeline-item">
                                    <span class="time"><i class="fa fa-clock-o"></i> 27 mins ago</span>

                                    <h3 class="timeline-header"><a href="#">Jay White</a> commented on your post</h3>

                                    <div class="timeline-body">
                                        Take me to your leader!
                                        Switzerland is small and neutral!
                                        We are more like Germany, ambitious and misunderstood!
                                    </div>
                                    <div class="timeline-footer">
                                        <a class="btn btn-warning btn-flat btn-xs">View comment</a>
                                    </div>
                                </div>
                            </li>
                            <!-- END timeline item -->
                            <!-- timeline time label -->
                            <li class="time-label">
                                <span class="bg-green">
                                    3 Jan. 2014
                                </span>
                            </li>
                            <!-- /.timeline-label -->
                            <!-- timeline item -->
                            <li>
                                <i class="fa fa-camera bg-purple"></i>

                                <div class="timeline-item">
                                    <span class="time"><i class="fa fa-clock-o"></i> 2 days ago</span>

                                    <h3 class="timeline-header"><a href="#">Mina Lee</a> uploaded new photos</h3>

                                    <div class="timeline-body">
                                        <img src="http://placehold.it/150x100" alt="..." class="margin">
                                        <img src="http://placehold.it/150x100" alt="..." class="margin">
                                        <img src="http://placehold.it/150x100" alt="..." class="margin">
                                        <img src="http://placehold.it/150x100" alt="..." class="margin">
                                    </div>
                                </div>
                            </li>
                            <!-- END timeline item -->
                            <li>
                                <i class="fa fa-clock-o bg-gray"></i>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div id="box-req" style="padding:10px;" class="panel panel-default">
                    <div class="box-header">
                        <h3>Time Summary</h3>
                        <h5 style="border-bottom: 1px solid #f4f4f4;margin-left:10px;"> Time Diff [Req - Action]: 200 m</h5>
                        <h5 style="border-bottom: 1px solid #f4f4f4;margin-left:10px;"> Time Diff [Action - Resolve] : 200 m</h5>
                        <h5 style="border-bottom: 1px solid #f4f4f4;margin-left:10px;"> Time Diff [Req - Resolve] : 200 m</h5>
                        <h5 style="border-bottom: 1px solid #f4f4f4;margin-left:10px;"> Time Use  : 200 m</h5>
                    </div>
                    <div class="box-header">
                        <h3>Expense Summary</h3>
                        <h5 style="border-bottom: 1px solid #f4f4f4;margin-left:10px;"> Time Diff [Req - Action]: 200 m</h5>
                        <h5 style="border-bottom: 1px solid #f4f4f4;margin-left:10px;"> Time Diff [Action - Resolve] : 200 m</h5>
                        <h5 style="border-bottom: 1px solid #f4f4f4;margin-left:10px;"> Time Diff [Req - Resolve] : 200 m</h5>
                        <h5 style="border-bottom: 1px solid #f4f4f4;margin-left:10px;"> Time Use  : 200 m</h5>
                    </div>
                    <div class="panel-footer">
                        <h3> Total Amount : 2,5463</h3>
                    </div>
                </div>
            </div>
        </div>
    </form>
</section>

<div class="modal bs-modal-lg fade" id="equipment-default">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title"><i class="fa fa-edit"></i> Change equipment or machine</h4>
            </div>
            <div class="modal-body">
                <select class="form-control select2" >
                    <option> Group1</option>
                </select>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
                <button type="button" id="save-change-equipment" class="btn btn-primary">Save changes</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>


@section Scripts{
    <script>

        //$('#SerialNumber').keyup(function () {
        //    var requestData = {
        //        BranchId: $('#BranchId').val(),
        //        SerialNumber : $(this).val()
        //    };
        //    $.ajax({
        //        url: '/Equipment/GetEquipmentBySnJson',
        //        type: 'POST',
        //        data: JSON.stringify(requestData),
        //        dataType: 'json',
        //        contentType: 'application/json; charset=utf-8',
        //        error: function (xhr) {
        //            alert('Error: ' + xhr.statusText);
        //        },
        //        success: function (result) {
        //            if (result.ok) {
        //                $('#SerialNumber').addClass("found-text");
        //                $('#MachineName').html(result.item.name)
        //            } else {
        //                $('#SerialNumber').removeClass("found-text");
        //                $('#MachineName').html('');
        //            }
        //        },
        //        async: true,
        //        processData: false
        //    }); 
        //});

        $('#SerialId').select2({
            ajax: {
                url: '/Equipment/GetEquipmentBySerialNumberOrNameJson',
                width: 'resolve',
                data: function (params) {
                    return {
                        q: params.term, branchId: $('#BranchId').val()
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.items
                    };
                }
            }
        });

        $('#RequestorId').select2({
            ajax: {
                url: '/User/GetUserJson',
                width: 'resolve',
                data: function (params) {
                    return {
                        q: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.items
                    };
                }
            }
        });

    var DocNo = '@(string.IsNullOrEmpty(Model.DocNo)? "" : Model.DocNo )';
    var BuildingId = @(string.IsNullOrEmpty(Model.DocNo)? 0 : Model.BuildingId );
    var ClassId =@(string.IsNullOrEmpty(Model.DocNo)? 0 : Model.ClassId );
    var RoomId = @(string.IsNullOrEmpty(Model.DocNo)? 0 : Model.RoomId );
    var DepartId = @(string.IsNullOrEmpty(Model.DocNo)? 0 : Model.DepartId );
    if (DocNo != '') {
        $('#PriorityId').prop('disabled', true);
        $('.loading-wait').show();
    }

    $('#RequestorId').on("select2:selecting", function (e) {
        var requestData = {
            Id: e.params.args.data.id
        };
        $.ajax({
            url: '/User/GetUserFirstJson',
            type: 'POST',
            data: JSON.stringify(requestData),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                $('.loading-wait').show();
                if (result.ok) {
                    BuildingId = result.item.buildingId;
                    ClassId = result.item.classId;
                    RoomId = result.item.roomId;
                    DepartId = result.item.departId;
                    PopulateDepart();
                    PopulateBuilding();
                    PopulateClass();
                    PopulateRoom();
                    $('#Contact').val(result.item.contact);
                }
            },
            async: true,
            processData: false
        });
    });

    $('#DepartId').select2({
        ajax: {
            url: '/Depart/GetDepartJson',
            width: 'resolve',
            data: function (params) {
                return {
                    q: params.term
                };
            },
            processResults: function (data) {
                return {
                    results: data.items
                };
            }
        }
    });

    $('#BuildingId').select2({
        ajax: {
            url: '/Building/GetBuildingJson',
            width: 'resolve',
            data: function (params) {
                return {
                    q: params.term, branchId :  $('#BranchId').val()
                };
            },
            processResults: function (data) {
                return {
                    results: data.items
                };
            }
        }
    });
    $('#BuildingId').change(function (e) {
        BuildingId = 0;
        ClassId = 0;
        RoomId = 0;
        DepartId = 0;
        $('.loading-wait').show();
        PopulateClass();
        PopulateRoom();
    });

    $('#ClassId').select2({
        ajax: {
            url: '/Class/GetClassJson',
            width: 'resolve',
            data: function (params) {
                return {
                    q: params.term, buildingId: $('#BuildingId').val()
                };
            },
            processResults: function (data) {
                return {
                    results: data.items
                };
            }
        }
    });
    $('#ClassId').change(function (e) {
        BuildingId = 0;
        ClassId = 0;
        RoomId = 0;
        DepartId = 0;
        $('.loading-wait').show();
        PopulateRoom();
    });

    $('#RoomId').select2({
        ajax: {
            url: '/Room/GetRoomJson',
            width: 'resolve',
            data: function (params) {
                return {
                    q: params.term, classId: $('#ClassId').val()
                };
            },
            processResults: function (data) {
                return {
                    results: data.items
                };
            }
        }
    });
    $('#RoomId').change(function (e) {
        BuildingId = 0;
        ClassId = 0;
        RoomId = 0;
        DepartId = 0;
    });

    $('#PriorityId').select2({
        ajax: {
            url: '/Priority/GetPriorityJson',
            width: 'resolve',
            data: function (params) {
                return {
                    q: params.term
                };
            },
            processResults: function (data) {
                return {
                    results: data.items
                };
            }
        }
    });
    $('#StatusId').select2({
        ajax: {
            url: '/Status/GetStatusJson',
            width: 'resolve',
            data: function (params) {
                return {
                    q: params.term
                };
            },
            processResults: function (data) {
                return {
                    results: data.items
                };
            }
        }
    });

    function PopulateBuilding() {
        var requestData = {
            Id: $('#BranchId').val()
        };
        $('#BuildingId').empty();
        $.ajax({
            url: '/Building/GetBuildingJSON',
            type: 'POST',
            data: JSON.stringify(requestData),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                if (result.ok) {
                    result.listData.forEach(function (el) {
                        $('#BuildingId').append(
                            `<option value="{0}" {1} >{2}</option>`.format([el.id, BuildingId == el.id ? 'selected' : '', el.name])
                        );
                    });
                    PopulateClass();
                }
            },
            async: true,
            processData: false
        });
    }

    function PopulateClass() {
        var requestData = {
            Id: $('#BuildingId').val()
        };
        $('#ClassId').empty();
        $.ajax({
            url: '/Class/GetClassJSON',
            type: 'POST',
            data: JSON.stringify(requestData),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                if (result.ok) {
                    result.listData.forEach(function (el) {
                        $('#ClassId').append(
                            `<option value="{0}" {1} >{2}</option>`.format([el.id, ClassId == el.id ? 'selected' : '', el.name])
                        );
                    });
                    PopulateRoom();
                }
            },
            async: true,
            processData: false
        });
    }

    function PopulateRoom() {
        var requestData = {
            Id: $('#ClassId').val()
        };
        $('#RoomId').empty();
        $.ajax({
            url: '/Room/GetRoomJSON',
            type: 'POST',
            data: JSON.stringify(requestData),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                $('.loading-wait').fadeOut(500, function () {
                    $('.loading-wait').hide();
                });
                alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                if (result.ok) {
                    result.listData.forEach(function (el) {
                        $('#RoomId').append(
                            `<option value="{0}" {1} >{2}</option>`.format([el.id, RoomId == el.id ? 'selected' : '', el.name])
                        );
                    });

                }
                $('.loading-wait').fadeOut(500, function () {
                    $('.loading-wait').hide();
                });
            },
            async: true,
            processData: false
        });
    }

    function PopulateDepart() {
        var requestData = {
            Id: $('#BranchId').val()
        };
        $.ajax({
            url: '/Depart/GetDepartJson',
            type: 'POST',
            data: JSON.stringify(requestData),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                alert('Error: ' + xhr.statusText);
            },
            success: function (result) {
                if (result.ok) {
                    $('#DepartId').empty();
                    result.listData.forEach(function (el) {
                        $('#DepartId').append(
                            `<option value="{0}" {1} >{2}</option>`.format([el.id, DepartId == el.id ? 'selected' : '', el.name])
                        );
                    });
                }
            },
            async: true,
            processData: false
        });
    }

    function Save()
    {
        if ($('#Title').val()=='') {
            toastr["error"]("Title is required.")
            return;
         }
        if ($('#Description').val() == '') {
            toastr["error"]("Description is required.")
            return;
        }
        if ($('#RequestorId').val() == '' || $('#RequestorId').val() == '0' || $('#RequestorId').val() == null) {
            toastr["error"]("Requestor is required.")
            return;
        }
        if ($('#DepartId').val() == '' || $('#DepartId').val() == '0' || $('#DepartId').val() == null) {
            toastr["error"]("Department is required.")
            return;
        }
        if ($('#BuildingId').val() == '' || $('#BuildingId').val() == '0' || $('#BuildingId').val() == null) {
            toastr["error"]("Building is required.")
            return;
        }
        if ($('#ClassId').val() == '' || $('#ClassId').val() == '0' || $('#ClassId').val() == null) {
            toastr["error"]("Class is required.")
            return;
        }
        if ($('#RoomId').val() == '' || $('#RoomId').val() == '0' || $('#RoomId').val() == null) {
            toastr["error"]("Room is required.")
            return;
        }
        if ($('#PriorityId').val() == '' || $('#PriorityId').val() == '0' || $('#PriorityId').val() == null) {
            toastr["error"]("Priority is required.")
            return;
        }
        if ($('#StatusId').val() == '' || $('#StatusId').val() == '0' || $('#StatusId').val() == null) {
            toastr["error"]("Status is required.")
            return;
        }
        $('.loading-wait').show();

        var requestData = {
            BranchId: $('#BranchId').val(),
            BuildingId: $('#BuildingId').val(),
            ClassId: $('#ClassId').val(),
            Contact: $('#Contact').val(),
            DepartId: $('#DepartId').val(),
            Description: $('#Description').val(),
            PriorityId: $('#PriorityId').val() ,
            RequestorId: $('#RequestorId').val() ,
            RoomId: $('#RoomId').val(),
            StatusId: $('#StatusId').val(),
            Title: $('#Title').val(),
            Id: $('#Id').val(),
            SerialNumber: $('#SerialNumber').val()
        };
        $.ajax({
            url: '/Ticket',
            type: 'POST',
            data: JSON.stringify(requestData),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                $('.loading-wait').fadeOut(1000, function () {
                    toastr["error"](response.responseText)
                    $('.loading-wait').hide();
                 });
            },
            success: function (result) {
                if (result.ret.ok) {
                    $('.loading-wait').fadeOut(1000, function () {
                        toastr["success"]("Success")
                        $('.loading-wait').hide();
                        if ($('#DocNo').val() == '') {
                            setTimeout(function () { window.location.href = '/Ticket/?id=' + result.id; }, 1500);
                        } 
                        if ($('#SerialNumber').val() == '') {
                            $('#MachineName').html('');
                        }
                    });
                } else {
                    $('.loading-wait').fadeOut(1000, function () {
                        toastr["error"](result.ret.message)
                        $('.loading-wait').hide();
                    });
                }
            },
            async: true,
            processData: false
        });
    }

    if (BuildingId != 0) {
        PopulateDepart();
        PopulateBuilding();
        PopulateClass();
        PopulateRoom();
    }
    </script>
}

